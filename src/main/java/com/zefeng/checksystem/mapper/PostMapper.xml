<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zefeng.checksystem.mapper.PostMapper">
<!-- 自定义返回结果集 -->
<resultMap id="userMap" type="Post">
		<id property="id" column="id" javaType="java.lang.Integer"></id>
		<result property="tdid" column="tdid" javaType="java.lang.Integer"></result>
		<result property="postno" column="postno" javaType="java.lang.String"></result>
		<result property="postname" column="postname" javaType="java.lang.String"></result>
		<result property="postwages" column="postwages" javaType="java.lang.String"></result>
		<result property="postnum" column="postnum" javaType="java.lang.Integer"></result>
		<result property="postjob" column="postjob" javaType="java.lang.String"></result>
	</resultMap>

<!-- 在各种标签中的id属性必须和接口中的方法名相同 ， id属性值必须是唯一的，不能够重复使用。parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型-->    
<!-- useGeneratedKeys：（ 仅 对 insert 有 用 ） 这 会 告 诉 MyBatis 使 用 JDBC 的getGeneratedKeys 
            方法来取出由数据（比如：像 MySQL 和 SQLServer 这样的数据库管理系统的自动递增字段）内部生成的主键。默认值： false。 -->    
<!--keyProperty： （仅对 insert有用）标记一个属性， MyBatis 会通过 getGeneratedKeys或者通过 insert 语句的 selectKey 子元素设置它的值。默认：不设置。 -->
<!--#{}中的内容，为占位符，当参数为某个JavaBean时，表示放置该Bean对象的属性值  -->


    <insert id="insertPost" useGeneratedKeys="true" keyProperty="id">
        insert into post (tdid,postno,postname,postwages,postnum,postjob) values (#{tdid},#{postno},#{postname},#{postwages},#{postnum},#{postjob})
    </insert>
    
    <update id="updatePost" >
      update post set tdid=#{tdid},postno=#{postno},postname=#{postname},postwages=#{postwages} ,postnum=#{postnum},postjob=#{postjob} where id=#{id}
    </update>
    
    <delete id="deletePost" parameterType="int">
     delete from post where id=#{id}  
    </delete>
    
     <delete id="deletePostByTdId" parameterType="int">
     delete from post where tdid=#{tdid}  
    </delete>
    
    
    <select id="selectPostById" parameterType="int" resultMap="userMap">
     select * from post where id=#{id}
    </select>
    
     <select id="selectPostByTdId" parameterType="int" resultMap="userMap">
     select * from post where tdid=#{tdid}
    </select>
    
    <select id="selectAllPost" resultMap="userMap">
     select * from post
    </select>
    
      <select id="selectPostByPostName" parameterType="String" resultMap="userMap">
     SELECT * from post where postname like #{postname}
    </select>
    
    
</mapper>