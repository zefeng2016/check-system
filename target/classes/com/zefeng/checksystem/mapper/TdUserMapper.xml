<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zefeng.checksystem.mapper.TdUserMapper">
	<!-- 自定义返回结果集 -->
	<resultMap id="userMap" type="TdUser">
		<id property="id" column="id" javaType="java.lang.Integer"></id>
		<result property="tdno" column="tdno" javaType="java.lang.String"></result>
		<result property="tdname" column="tdname" javaType="java.lang.String"></result>
		<result property="tduser" column="tduser" javaType="java.lang.String"></result>
		<result property="tdphone" column="tdphone" javaType="java.lang.String"></result>
		<result property="tdcheck" column="tdcheck" javaType="java.lang.String"></result>
		<result property="local" column="local" javaType="java.lang.String"></result>
		<result property="introduce" column="introduce" javaType="java.lang.String"></result>
	</resultMap>
	<!-- 在各种标签中的id属性必须和接口中的方法名相同 ， id属性值必须是唯一的，不能够重复使用。parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型 -->
	<!-- useGeneratedKeys：（ 仅 对 insert 有 用 ） 这 会 告 诉 MyBatis 使 用 JDBC 的getGeneratedKeys 
		方法来取出由数据（比如：像 MySQL 和 SQLServer 这样的数据库管理系统的自动递增字段）内部生成的主键。默认值： false。 -->
	<!--keyProperty： （仅对 insert有用）标记一个属性， MyBatis 会通过 getGeneratedKeys或者通过 insert 
		语句的 selectKey 子元素设置它的值。默认：不设置。 -->
	<!--#{}中的内容，为占位符，当参数为某个JavaBean时，表示放置该Bean对象的属性值 -->


	<insert id="insertUser" useGeneratedKeys="true" keyProperty="id"  >
		insert into td (tdno,tdname,tduser,tdphone,tdcheck,local,introduce)
		values
		(#{tdno},#{tdname},#{tduser},#{tdphone},#{tdcheck},#{local},#{introduce})
	</insert>
	
	<update id="updateUser">
		update td set
		tdno=#{tdno},tdname=#{tdname},tduser=#{tduser},tdphone=#{tdphone},tdcheck=#{tdcheck},local=#{local},introduce=#{introduce}
		where id=#{id}
	</update>
	<update id="updateUserByCheck">
		update td set
		tdcheck= '已签到'
		where tduser=#{tduser} and tdphone=#{tdphone}
	</update>

	<delete id="deleteUser" parameterType="int">
		delete from td where
		id=#{id}
	</delete>

	<select id="selectUserById" parameterType="int" resultMap="userMap">
		select * from td where id=#{id}
	</select>
	
	<select id="selectUserByPhone" parameterType="String" resultMap="userMap">
		select id from td where tdphone = #{tdphone}
	</select>
	<select id="selectAllUser" resultMap="userMap">
		select * from td
	</select>
	
	
  <select id="selectTdByTdName" parameterType="String" resultMap="userMap">
    SELECT * from td where tdname like #{tdname}
    </select>
	<select id="selectTdCount" parameterType="java.util.Map" resultType="java.lang.Integer">
		select COUNT(*) FROM td WHERE tdcheck = '已签到' 
	</select>

</mapper>